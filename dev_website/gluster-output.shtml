<!--#set var="title" value="Using Gluster for Large Output Files"-->

<!--#include virtual="/includes/template-1-openhead.shtml" -->
<!--#include virtual="/includes/template-2-opensidebar.shtml" -->
<!--#include virtual="/includes/template-3-sidebar.shtml" -->
<!--#include virtual="/includes/template-4-mainbody.shtml" -->

<p>The below guide discusses how to use CHTC's Gluster option for jobs that 
use or produce very large files.</p>

<b>To best understand the below information, users 
should already be familiar with:</b><br>
<ol>
	<li>Using the command-line to: navigate directories, 
	create/edit/copy/move/delete files and directories, 
	and run intended programs (aka "executables").</li>
	<li>CHTC's <a href="/helloworld.shtml">Intro to Running HTCondor Jobs</a></li>
	<li>CHTC's guides for In-job File Handling and 
	<a href="/file-availability.shtml">File Availability Options</a></li>
</ol>

<h2>Knowing When/Why to Use Gluster</h2>
<p> Make sure to see our <a href="/file-avail-gluster.shtml">
File Availability guide</a>, for additional discussion 
of Gluster, as compared to other CHTC options.</p>

<a name="submit"></a>
<h1>1. Submission and Submit File Implications</h1>

<!--#include virtual="/dev_website/gluster-sub-template.shtml" -->

<a name="output"></a>
<h1>2. Writing large output files to Gluster from within a job</h1>

<p>As stated in <a href="#submit">#2</a>, all 
interaction with files in <code>/mnt/gluster</code> 
should occur within your designated "executable", when it runs. 
Therefore, there are two options for having steps within your 
executable write files to Gluster, as well as a consideration 
for large standard output.</p>

<h2>A. Option 1: Write output files DIRECTLY to Gluster (best option, if possible)</h2>

<p>Essentially, your executable to should refer to files it will produce 
using the ABSOLUTE PATH (e.g. <code>/mnt/gluster/username/large.file</code>)</p>

<p>Example, if executable is a shell script:</p>
<pre>#!/bin/bash
#
# script to run myprogram, 
# which writes a large file to Gluster
./myprogram myinput.txt /mnt/gluster/username/large_output.txt
# END</pre>

<h2>B. Option 2: Write output files to the working directory, 
then move these to Gluster (only if needed)</h2>

<p>In rare instances, the software you're using may not be able to write 
to files using an absolute path like <code>/mnt/gluster</code>, and may only be able 
to write files within or relative to the job's working directory (on 
the execute server). Please feel free to write to us if you think your 
software cannot write files directly to <code>/mnt/gluster</code>. We're happy to help 
you know for sure.</p>

<p>In such cases, you can simply have your executable write the file 
to a location within the working directory, and then make sure to move 
this large file to Gluster (or copy to Gluster, and then remove from 
the working directory), so that it's not transferred back to the home 
directory, like all other "new" files in the working directory will be. </p>

<p>Example, if "<code>myprogram</code>" cannot 
write files to <code>/mnt/gluster</code>:</p>
<pre>#!/bin/bash
# 
# Command for myprogram
./myprogram myinput.txt large_output.txt
# Move large output to Gluster:
mv large_input.txt /mnt/gluster/username/large_input.txt
# END</pre>

<h2>C. ALSO consider: Large standard output ("screen output") produced 
within your executable</h2>

<p>In some instances, your software may produce very large standard 
output (what would typically be output to the command screen, if you 
ran the command for yourself, instead of having HTCondor do it). Because 
such standard output from your software will usually be captured by 
HTCondor in the submit file "output" file, this "output" file WILL 
still be transferred by HTCondor back to your home directory on the 
submit server, which may be very bad for you and others, if that captured 
standard output is very large.</p>

<p>In these cases, it can be useful to redirect the standard output 
of commands in your executable to a file in Gluster (using the 
command-line redirection operator, ">"), so that this large output 
is captured and saved to a file within Gluster.</p>

<p>Example, if "<code>myprogram</code>" produces very large standard output, and 
is run from a script (bash) executable:</p>

<pre>#!/bin/bash
#
# script to run myprogram, 
# redirecting large standard output to a file in Gluster
./myprogram myinput.txt myoutput.txt > /mnt/gluster/username/large_std.out
# END</pre>

<h1>3. Removing files from Gluster after jobs complete</h1>

<p>You can directly copy files out of Gluster using command-line <code>scp</code>
or file-transfer applications like WinSCP.</p>

<!--#include virtual="/includes/template-5-finish.shtml" -->
