<!--#set var="title" value="Compiling Code with an Interactive Job"-->
<!--#include virtual="/includes/template-1-openhead.shtml" -->
<!--#include virtual="/includes/template-2-opensidebar.shtml" -->
<!--#include virtual="/includes/template-3-sidebar.shtml" -->
<!--#include virtual="/includes/template-4-mainbody.shtml" -->

<p>
The CHTC has two "build" machines configured for compiling code 
interactively.  Typically, any compilable code to be run in CHTC should be compiled 
on our build servers</b>. 
<br /><br />
(Note: If you are using a non-CHTC submit server to submit jobs to a 
non-CHTC HTCondor Pool, you may have different capabilities for 
submitting jobs interactively that are not covered here.)
</p>

<h2>1. Setup</h2>
<p>
Though it's not essential, it may be easiest for you to create a tarball 
with all necessary code and compiling sources/libraries that you'll need, 
so that you don't have to list every file and/or 
directory separately for "transfer_input_files" in the submit file.</p>

<blockquote>
<b>Creating a tarball</b>: To create a tarball, use 
something like the following command within a 
directory where all of your needed files and directories are located:
<pre class="term">
[alice@submit]$ tar -czf combined.tar.gz file1 file2 dir1 <i>(etc.)</i>
</pre>
The above would produce a single file called "<code>combined.tar.gz</code>" 
that contains all other files and directories indicated at the end of the 
command.
</blockquote>

<h2>2. Creating Interactive Submit Files</h2>
<p>
Create a file called interactive.sub (or any other 
name you want), and paste in the below lines:

<pre class="sub">
# Name the log file:
log = interactive.log

# Name the files where standard output and error should be saved:
output = build.out
error = build.err

# These lines require your compiling job to land on our build servers:
+IsBuildJob = true
requirements = (OpSysAndVer =?= "SL6") && ( IsBuildSlot == true )

# Indicate all files that need to go into the interactive job session,
#  including any tar files that you prepared:
transfer_input_files = combined.tar.gz, other_file.txt

# It's still important to request enough computing resources. The below 
#  values are a good starting point, but consider your file sizes for an
#  estimate of "disk" and use any other information you might have
#  for "memory" and/or "cpus".
request_cpus = 1
request_memory = 2GB
request_disk = 2GB

queue 1
</pre>

<p>Before submitting the interactive job: </p>
<ul>
<li>Modify the filename for <code>transfer_input_files</code> to 
indicate the source tarball you created.</li>
<li>Modify the filenames for <code>output</code>, <code>error</code>, 
and <code>log</code> per your preferences.</li>
</ul>
<p>The above submit file will select for our Linux 6 (SL6- and 
RHEL6-compatible) build machines by default.  If you think your 
code requires a newer operating system, see 
<a href="{{'/os-transition' | relative_url }}">this guide</a> for how to access our build machine
that is running CentOS 7.  
</p>

<h2>3. Submitting and Working Interactively</h2>
<p>
When your submit file is ready, enter the 
following, indicating the name of your submit file in the place 
of <code>interactive.sub</code>:
<pre class="term">
[alice@submit]$ condor_submit -i interactive.sub
</pre>

<p>After several minutes (the time it takes for HTCondor to match new jobs 
to available CHTC execute servers), an SSH connection will be 
created to a build server, and the relevant files will have been 
transfered into the job working directory for you. From there, you can 
un-tar any tar files and compile your code.  </p>

<blockquote>
<b>Un-tarring files</b>: A typical untar command looks like this: 
<pre class="term">
[alice@build]$ tar -xzf combined.tar.gz
</pre>
</blockquote>


<h2>4. Exiting</h2>

<p>When you are done working, make a new tarball of files you 
want copied back to the submit server, and delete everything else that you don't want.</p>

<p>
To exit as you would for any SSH shell, type <code>exit</code>. Your 
interactive job will be terminated, and you will return to the 
location on the submit node from which you submitted the interactive 
job. Any new files (your new tarball) will have been copied back to 
this location.
</p>
<!--#include virtual="/includes/template-5-finish.shtml" -->

